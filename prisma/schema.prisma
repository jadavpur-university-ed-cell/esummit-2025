// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  REFERRED_USER
  ADMIN
  CAMPUS_AMBASSADOR
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}
enum PaymentMethod {
  CARD
  NETBANKING
  UPI
}
type Notification {
  id String
  title String
  description String
  tags String[]
  read Boolean
}

model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  name  String
  password String
  college String
  year String
  branch String
  rollNo String?
  role Role
  referralCode String @unique
  payments Payments[] @relation("UserPayments")
  teamIDs String[] @db.ObjectId
  teams Team[] @relation(fields: [teamIDs], references: [id])
}

model Team{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  memberIds String[] @db.ObjectId
  members User[] @relation(fields: [memberIds], references: [id])
}

model Payments {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  userId         String         @db.ObjectId
  user           User           @relation("UserPayments", fields: [userId], references: [id])
  amount         Int
  paymentDate    DateTime       @default(now())
  paymentMethod  PaymentMethod
  transactionId  String         @unique
  status         PaymentStatus
}